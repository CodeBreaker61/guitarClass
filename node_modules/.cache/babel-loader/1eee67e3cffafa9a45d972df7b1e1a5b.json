{"ast":null,"code":"var _jsxFileName = \"/home/jithin/GuitarClass/guitarclass/src/ReusableComponents/Toaster/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useRef, useEffect } from \"react\";\nimport \"./style.scss\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Toaster = props => {\n  _s();\n\n  const {\n    toastList,\n    position,\n    deleteTime\n  } = props;\n  const [isVisible, setIsVisible] = useState(true);\n  React.useEffect(() => {\n    if (isVisible) {\n      const timer = setTimeout(() => {\n        setIsVisible(false);\n      }, deleteTime);\n      return () => {\n        clearTimeout(timer);\n      };\n    }\n  }, [isVisible]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: isVisible ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `toast-notification-container ${position}`,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `notification toast ${position}`,\n        style: {\n          backgroundColor: toastList.backgroundColor\n        },\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"notification-message\",\n          children: toastList.description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 9\n    }, this) : null\n  }, void 0, false);\n};\n\n_s(Toaster, \"m22S9IQwDfEe/fCJY7LYj8YPDMo=\");\n\n_c = Toaster;\nexport default Toaster; // import React, { useState } from 'react';\n// import './Toast.scss';\n// type Props = {\n//   toastList: {\n//     description: string;\n//     backgroundColor: string;\n//   };\n//   position: 'top-center';\n//   deleteTime: number;\n// };\n// const Toaster = (props: Props) => {\n//   const { toastList, position, deleteTime } = props;\n//   const [isVisible, setIsVisible] = useState(true);\n//   React.useEffect(() => {\n//     if (isVisible) {\n//       const timer = setTimeout(() => {\n//         setIsVisible(false);\n//       }, deleteTime);\n//       return () => {\n//         clearTimeout(timer);\n//       };\n//     }\n//   }, [isVisible]);\n//   return (\n//     <>\n//       {isVisible ? (\n//         <div className={`toast-notification-container ${position}`}>\n//           <div\n//             className={`notification toast ${position}`}\n//             style={{ backgroundColor: toastList.backgroundColor }}\n//           >\n//             <div className=\"notification-message\">{toastList.description}</div>\n//           </div>\n//         </div>\n//       ) : null}\n//     </>\n//   );\n// };\n// export default Toaster;\n\nvar _c;\n\n$RefreshReg$(_c, \"Toaster\");","map":{"version":3,"sources":["/home/jithin/GuitarClass/guitarclass/src/ReusableComponents/Toaster/index.js"],"names":["React","useState","useRef","useEffect","Toaster","props","toastList","position","deleteTime","isVisible","setIsVisible","timer","setTimeout","clearTimeout","backgroundColor","description"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,MAA1B,EAAkCC,SAAlC,QAAmD,OAAnD;AACA,OAAO,cAAP;;;;AACA,MAAMC,OAAO,GAAIC,KAAD,IAAW;AAAA;;AACzB,QAAM;AAAEC,IAAAA,SAAF;AAAaC,IAAAA,QAAb;AAAuBC,IAAAA;AAAvB,MAAsCH,KAA5C;AACA,QAAM,CAACI,SAAD,EAAYC,YAAZ,IAA4BT,QAAQ,CAAC,IAAD,CAA1C;AACAD,EAAAA,KAAK,CAACG,SAAN,CAAgB,MAAM;AACpB,QAAIM,SAAJ,EAAe;AACb,YAAME,KAAK,GAAGC,UAAU,CAAC,MAAM;AAC7BF,QAAAA,YAAY,CAAC,KAAD,CAAZ;AACD,OAFuB,EAErBF,UAFqB,CAAxB;AAIA,aAAO,MAAM;AACXK,QAAAA,YAAY,CAACF,KAAD,CAAZ;AACD,OAFD;AAGD;AACF,GAVD,EAUG,CAACF,SAAD,CAVH;AAYA,sBACE;AAAA,cACGA,SAAS,gBACR;AAAK,MAAA,SAAS,EAAG,gCAA+BF,QAAS,EAAzD;AAAA,6BACE;AACE,QAAA,SAAS,EAAG,sBAAqBA,QAAS,EAD5C;AAEE,QAAA,KAAK,EAAE;AAAEO,UAAAA,eAAe,EAAER,SAAS,CAACQ;AAA7B,SAFT;AAAA,+BAIE;AAAK,UAAA,SAAS,EAAC,sBAAf;AAAA,oBAAuCR,SAAS,CAACS;AAAjD;AAAA;AAAA;AAAA;AAAA;AAJF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADQ,GASN;AAVN,mBADF;AAcD,CA7BD;;GAAMX,O;;KAAAA,O;AA+BN,eAAeA,OAAf,C,CAEA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA","sourcesContent":["import React, { useState, useRef, useEffect } from \"react\";\nimport \"./style.scss\";\nconst Toaster = (props) => {\n  const { toastList, position, deleteTime } = props;\n  const [isVisible, setIsVisible] = useState(true);\n  React.useEffect(() => {\n    if (isVisible) {\n      const timer = setTimeout(() => {\n        setIsVisible(false);\n      }, deleteTime);\n\n      return () => {\n        clearTimeout(timer);\n      };\n    }\n  }, [isVisible]);\n\n  return (\n    <>\n      {isVisible ? (\n        <div className={`toast-notification-container ${position}`}>\n          <div\n            className={`notification toast ${position}`}\n            style={{ backgroundColor: toastList.backgroundColor }}\n          >\n            <div className=\"notification-message\">{toastList.description}</div>\n          </div>\n        </div>\n      ) : null}\n    </>\n  );\n};\n\nexport default Toaster;\n\n// import React, { useState } from 'react';\n\n// import './Toast.scss';\n\n// type Props = {\n//   toastList: {\n//     description: string;\n//     backgroundColor: string;\n//   };\n//   position: 'top-center';\n//   deleteTime: number;\n// };\n// const Toaster = (props: Props) => {\n//   const { toastList, position, deleteTime } = props;\n//   const [isVisible, setIsVisible] = useState(true);\n\n//   React.useEffect(() => {\n//     if (isVisible) {\n//       const timer = setTimeout(() => {\n//         setIsVisible(false);\n//       }, deleteTime);\n\n//       return () => {\n//         clearTimeout(timer);\n//       };\n//     }\n//   }, [isVisible]);\n\n//   return (\n//     <>\n//       {isVisible ? (\n//         <div className={`toast-notification-container ${position}`}>\n//           <div\n//             className={`notification toast ${position}`}\n//             style={{ backgroundColor: toastList.backgroundColor }}\n//           >\n//             <div className=\"notification-message\">{toastList.description}</div>\n//           </div>\n//         </div>\n//       ) : null}\n//     </>\n//   );\n// };\n\n// export default Toaster;\n"]},"metadata":{},"sourceType":"module"}