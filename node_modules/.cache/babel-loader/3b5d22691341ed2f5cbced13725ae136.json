{"ast":null,"code":"var _jsxFileName = \"/home/jithin/GuitarClass/guitarclass/src/Components/Home/AddPost.js\";\nimport React, { Component } from \"react\";\nimport getImg from \"../../Utils/getImg\";\nimport \"./Home.scss\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass AddPost extends Component() {\n  constructor(props) {\n    super(props);\n    this.state = {\n      file: []\n    };\n  }\n\n  handleUpload(item) {\n    let x = this.state.file;\n    x.push(item[0]); // console.log(item);\n\n    this.setState({\n      file: x\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sa-modal-w\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"sa-modal-box\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: getImg(\"cross.svg\"),\n          style: {\n            position: \"relative\",\n            right: \"-50%\",\n            cursor: \"pointer\"\n          },\n          className: \"close-btn\",\n          onClick: () => this.props.toggleAddModal(false)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"headingEntry\",\n          children: [\"Heading\", /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"postHead\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          id: \"postData\",\n          placeholder: \"Add Data\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Attach Files\", \" \", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"file\",\n            onChange: ev => this.handleUpload(ev.target.files)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(React.Fragment, {\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"postFiles\",\n            children: this.state.file && this.state.file.map((f, ind) => {\n              return /*#__PURE__*/_jsxDEV(\"img\", {\n                className: \"eachFile\",\n                src: URL.createObjectURL(f),\n                alt: f.name\n              }, ind, false, {\n                fileName: _jsxFileName,\n                lineNumber: 49,\n                columnNumber: 21\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          style: {\n            width: \"50%\"\n          },\n          name: \"Add Post\",\n          className: \"sa-login-btn\",\n          children: \"Add Post\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default AddPost;","map":{"version":3,"sources":["/home/jithin/GuitarClass/guitarclass/src/Components/Home/AddPost.js"],"names":["React","Component","getImg","AddPost","constructor","props","state","file","handleUpload","item","x","push","setState","render","position","right","cursor","toggleAddModal","ev","target","files","map","f","ind","URL","createObjectURL","name","width"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,MAAP,MAAmB,oBAAnB;AACA,OAAO,aAAP;;;AAEA,MAAMC,OAAN,SAAsBF,SAAS,EAA/B,CAAkC;AAChCG,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,IAAI,EAAE;AADK,KAAb;AAGD;;AAEDC,EAAAA,YAAY,CAACC,IAAD,EAAO;AACjB,QAAIC,CAAC,GAAG,KAAKJ,KAAL,CAAWC,IAAnB;AACAG,IAAAA,CAAC,CAACC,IAAF,CAAOF,IAAI,CAAC,CAAD,CAAX,EAFiB,CAGjB;;AACA,SAAKG,QAAL,CAAc;AACZL,MAAAA,IAAI,EAAEG;AADM,KAAd;AAGD;;AACDG,EAAAA,MAAM,GAAG;AACP,wBACE;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA,6BACE;AAAK,QAAA,SAAS,EAAC,cAAf;AAAA,gCACE;AACE,UAAA,GAAG,EAAEX,MAAM,CAAC,WAAD,CADb;AAEE,UAAA,KAAK,EAAE;AAAEY,YAAAA,QAAQ,EAAE,UAAZ;AAAwBC,YAAAA,KAAK,EAAE,MAA/B;AAAuCC,YAAAA,MAAM,EAAE;AAA/C,WAFT;AAGE,UAAA,SAAS,EAAC,WAHZ;AAIE,UAAA,OAAO,EAAE,MAAM,KAAKX,KAAL,CAAWY,cAAX,CAA0B,KAA1B;AAJjB;AAAA;AAAA;AAAA;AAAA,gBADF,eAQE;AAAK,UAAA,SAAS,EAAC,cAAf;AAAA,6CAEE;AAAO,YAAA,EAAE,EAAC;AAAV;AAAA;AAAA;AAAA;AAAA,kBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,gBARF,eAYE;AAAU,UAAA,EAAE,EAAC,UAAb;AAAwB,UAAA,WAAW,EAAE;AAArC;AAAA;AAAA;AAAA;AAAA,gBAZF,eAaE;AAAA,qCACe,GADf,eAEE;AACE,YAAA,IAAI,EAAC,MADP;AAEE,YAAA,QAAQ,EAAGC,EAAD,IAAQ,KAAKV,YAAL,CAAkBU,EAAE,CAACC,MAAH,CAAUC,KAA5B;AAFpB;AAAA;AAAA;AAAA;AAAA,kBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,gBAbF,eAoBE,QAAC,KAAD,CAAO,QAAP;AAAA,iCACE;AAAK,YAAA,SAAS,EAAC,WAAf;AAAA,sBACG,KAAKd,KAAL,CAAWC,IAAX,IACC,KAAKD,KAAL,CAAWC,IAAX,CAAgBc,GAAhB,CAAoB,CAACC,CAAD,EAAIC,GAAJ,KAAY;AAC9B,kCACE;AACE,gBAAA,SAAS,EAAC,UADZ;AAEE,gBAAA,GAAG,EAAEC,GAAG,CAACC,eAAJ,CAAoBH,CAApB,CAFP;AAGE,gBAAA,GAAG,EAAEA,CAAC,CAACI;AAHT,iBAIOH,GAJP;AAAA;AAAA;AAAA;AAAA,sBADF;AAQD,aATD;AAFJ;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBApBF,eAuCE;AACE,UAAA,KAAK,EAAE;AAAEI,YAAAA,KAAK,EAAE;AAAT,WADT;AAEE,UAAA,IAAI,EAAC,UAFP;AAGE,UAAA,SAAS,EAAC,cAHZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAvCF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF;AAmDD;;AApE+B;;AAuElC,eAAexB,OAAf","sourcesContent":["import React, { Component } from \"react\";\nimport getImg from \"../../Utils/getImg\";\nimport \"./Home.scss\";\n\nclass AddPost extends Component() {\n  constructor(props) {\n    super(props);\n    this.state = {\n      file: [],\n    };\n  }\n\n  handleUpload(item) {\n    let x = this.state.file;\n    x.push(item[0]);\n    // console.log(item);\n    this.setState({\n      file: x,\n    });\n  }\n  render() {\n    return (\n      <div className=\"sa-modal-w\">\n        <div className=\"sa-modal-box\">\n          <img\n            src={getImg(\"cross.svg\")}\n            style={{ position: \"relative\", right: \"-50%\", cursor: \"pointer\" }}\n            className=\"close-btn\"\n            onClick={() => this.props.toggleAddModal(false)}\n          />\n\n          <div className=\"headingEntry\">\n            Heading\n            <input id=\"postHead\" />\n          </div>\n          <textarea id=\"postData\" placeholder={\"Add Data\"} />\n          <p>\n            Attach Files{\" \"}\n            <input\n              type=\"file\"\n              onChange={(ev) => this.handleUpload(ev.target.files)}\n            />\n          </p>\n          <React.Fragment>\n            <div className=\"postFiles\">\n              {this.state.file &&\n                this.state.file.map((f, ind) => {\n                  return (\n                    <img\n                      className=\"eachFile\"\n                      src={URL.createObjectURL(f)}\n                      alt={f.name}\n                      key={ind}\n                    />\n                  );\n                })}\n              {/* <div className=\"eachFile\">\n            <img id=\"eachFileAdd\" src={getImg(\"cross.svg\")} alt={\"addFile\"} />\n          \n          </div> */}\n            </div>\n          </React.Fragment>\n          <button\n            style={{ width: \"50%\" }}\n            name=\"Add Post\"\n            className=\"sa-login-btn\"\n          >\n            Add Post\n          </button>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default AddPost;\n"]},"metadata":{},"sourceType":"module"}