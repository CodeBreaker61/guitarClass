{"ast":null,"code":"var _jsxFileName = \"/home/jithin/GuitarClass/guitarclass/src/Components/Home/index.js\";\nimport React, { Component } from \"react\";\nimport getImg from \"../../Utils/getImg\";\nimport \"./Home.scss\";\nimport f1 from \"./../../assets/images/guitarBack.jpg\";\nimport AddPost from \"./AddPost\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Home extends Component {\n  constructor(props) {\n    super(props);\n\n    this.toggleAddModal = val => {\n      this.setState({\n        addModal: val\n      });\n    };\n\n    this.addPost = (head, body, attach) => {\n      let f = JSON.stringify(body).split(\"\\\\n\");\n      let h;\n      console.log(f);\n      h = f.map(e => {\n        h + \"<p>\" + e + \"</p>\";\n      });\n      let x = {\n        id: \"p0002\",\n        heading: head,\n        user: \"Jithin Kumar\",\n        date: JSON.stringify(new Date()),\n        data: h,\n        files: [f1],\n        comments: [{\n          user: \"sumukh\",\n          date: \"Sun May 02 2021 10:09:06 GMT+0530\",\n          line: \"Nice\"\n        }]\n      };\n      let y = this.state.data;\n      y.push(x);\n      this.setState({\n        data: y\n      });\n    };\n\n    this.toggleEditModal = id => {\n      let x = this.state.template;\n      let f = this.state.data.map(e => {\n        if (e.id == id) return e;\n      });\n      x.heading = f[0].heading;\n      x.data = f[0].data;\n      x.files.push(f[0].files);\n      this.setState({\n        template: x\n      });\n      this.toggleAddModal(true);\n    };\n\n    this.state = {\n      data: [],\n      addModal: false,\n      template: {\n        heading: \"\",\n        data: \"\",\n        files: []\n      }\n    };\n  }\n\n  componentDidMount() {\n    this.setState({\n      data: [{\n        id: \"p0001\",\n        heading: \"Lesson 1\",\n        user: \"Jithin Kumar\",\n        date: \"Sun May 02 2021 10:09:06 GMT+0530\",\n        data: \"<p>Introduction to music</p><p>All music is made up of 12+1 notes.....</p>\",\n        files: [f1],\n        comments: [{\n          user: \"sumukh\",\n          date: \"Sun May 02 2021 10:09:06 GMT+0530\",\n          line: \"Nice\"\n        }]\n      }]\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sa-home-w\",\n      children: [this.state.data.map((e, i) => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"eachPost\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"header\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"headerIcon\",\n                children: e.user[0].toUpperCase()\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 96,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"nameAndDate\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"namePost\",\n                  children: e.user\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 98,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"datePost\",\n                  children: e.date.split(\"GMT\")[0]\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 99,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 97,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 95,\n              columnNumber: 17\n            }, this), this.props.isLoggedIn == \"admin\" ? /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"editPost\",\n              onClick: () => this.toggleEditModal(e.id),\n              children: \"Edit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 103,\n              columnNumber: 19\n            }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"editPost\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 110,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"body\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"mainBody\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"postHead\",\n                children: e.heading\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 115,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"postBody\",\n                dangerouslySetInnerHTML: {\n                  __html: e.data\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 116,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"attachedFiles\",\n                children: e.files && e.files.map((f, ind) => {\n                  return /*#__PURE__*/_jsxDEV(\"img\", {\n                    className: \"eachFile\",\n                    src: f,\n                    alt: f.name\n                  }, ind, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 124,\n                    columnNumber: 27\n                  }, this);\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 120,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 114,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"comments\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"commentsHeader\",\n                children: \"Comments\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 135,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"commentsBody\",\n                children: e.comments && e.comments.map((c, ind) => {\n                  return /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"eachComment\",\n                    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"commentUser\",\n                      children: c.user\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 141,\n                      columnNumber: 29\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"commentDate\",\n                      children: c.date.split(\"GMT\")[0]\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 142,\n                      columnNumber: 29\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"commentLine\",\n                      children: c.line\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 145,\n                      columnNumber: 29\n                    }, this)]\n                  }, ind, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 140,\n                    columnNumber: 27\n                  }, this);\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 136,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                className: \"commentsInput\",\n                placeholder: \"Write a comment\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 150,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 134,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 15\n          }, this)]\n        }, i, true, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 13\n        }, this);\n      }), this.props.isLoggedIn == \"admin\" ? /*#__PURE__*/_jsxDEV(\"span\", {\n        class: \"sa-add-post\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: getImg(\"cross.svg\"),\n          alt: \"Add Post\",\n          onClick: () => this.toggleAddModal(true)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 11\n      }, this) : null, this.state.addModal ? /*#__PURE__*/_jsxDEV(AddPost, {\n        addPost: this.addPost.bind(this),\n        template: this.state.template,\n        toggleAddModal: this.toggleAddModal.bind(this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 11\n      }, this) : null]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default Home;","map":{"version":3,"sources":["/home/jithin/GuitarClass/guitarclass/src/Components/Home/index.js"],"names":["React","Component","getImg","f1","AddPost","Home","constructor","props","toggleAddModal","val","setState","addModal","addPost","head","body","attach","f","JSON","stringify","split","h","console","log","map","e","x","id","heading","user","date","Date","data","files","comments","line","y","state","push","toggleEditModal","template","componentDidMount","render","i","toUpperCase","isLoggedIn","__html","ind","name","c","bind"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,MAAP,MAAmB,oBAAnB;AACA,OAAO,aAAP;AACA,OAAOC,EAAP,MAAe,sCAAf;AACA,OAAOC,OAAP,MAAoB,WAApB;;;AAEA,MAAMC,IAAN,SAAmBJ,SAAnB,CAA6B;AAC3BK,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SA+BnBC,cA/BmB,GA+BDC,GAAD,IAAS;AACxB,WAAKC,QAAL,CAAc;AACZC,QAAAA,QAAQ,EAAEF;AADE,OAAd;AAGD,KAnCkB;;AAAA,SAqCnBG,OArCmB,GAqCT,CAACC,IAAD,EAAOC,IAAP,EAAaC,MAAb,KAAwB;AAChC,UAAIC,CAAC,GAAGC,IAAI,CAACC,SAAL,CAAeJ,IAAf,EAAqBK,KAArB,CAA2B,KAA3B,CAAR;AACA,UAAIC,CAAJ;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYN,CAAZ;AACAI,MAAAA,CAAC,GAAGJ,CAAC,CAACO,GAAF,CAAOC,CAAD,IAAO;AACfJ,QAAAA,CAAC,GAAG,KAAJ,GAAYI,CAAZ,GAAgB,MAAhB;AACD,OAFG,CAAJ;AAGA,UAAIC,CAAC,GAAG;AACNC,QAAAA,EAAE,EAAE,OADE;AAENC,QAAAA,OAAO,EAAEd,IAFH;AAGNe,QAAAA,IAAI,EAAE,cAHA;AAINC,QAAAA,IAAI,EAAEZ,IAAI,CAACC,SAAL,CAAe,IAAIY,IAAJ,EAAf,CAJA;AAKNC,QAAAA,IAAI,EAAEX,CALA;AAMNY,QAAAA,KAAK,EAAE,CAAC7B,EAAD,CAND;AAON8B,QAAAA,QAAQ,EAAE,CACR;AACEL,UAAAA,IAAI,EAAE,QADR;AAEEC,UAAAA,IAAI,EAAE,mCAFR;AAGEK,UAAAA,IAAI,EAAE;AAHR,SADQ;AAPJ,OAAR;AAeA,UAAIC,CAAC,GAAG,KAAKC,KAAL,CAAWL,IAAnB;AACAI,MAAAA,CAAC,CAACE,IAAF,CAAOZ,CAAP;AACA,WAAKf,QAAL,CAAc;AACZqB,QAAAA,IAAI,EAAEI;AADM,OAAd;AAGD,KAhEkB;;AAAA,SAkEnBG,eAlEmB,GAkEAZ,EAAD,IAAQ;AACxB,UAAID,CAAC,GAAG,KAAKW,KAAL,CAAWG,QAAnB;AACA,UAAIvB,CAAC,GAAG,KAAKoB,KAAL,CAAWL,IAAX,CAAgBR,GAAhB,CAAqBC,CAAD,IAAO;AACjC,YAAIA,CAAC,CAACE,EAAF,IAAQA,EAAZ,EAAgB,OAAOF,CAAP;AACjB,OAFO,CAAR;AAGAC,MAAAA,CAAC,CAACE,OAAF,GAAYX,CAAC,CAAC,CAAD,CAAD,CAAKW,OAAjB;AACAF,MAAAA,CAAC,CAACM,IAAF,GAASf,CAAC,CAAC,CAAD,CAAD,CAAKe,IAAd;AACAN,MAAAA,CAAC,CAACO,KAAF,CAAQK,IAAR,CAAarB,CAAC,CAAC,CAAD,CAAD,CAAKgB,KAAlB;AACA,WAAKtB,QAAL,CAAc;AACZ6B,QAAAA,QAAQ,EAAEd;AADE,OAAd;AAGA,WAAKjB,cAAL,CAAoB,IAApB;AACD,KA9EkB;;AAEjB,SAAK4B,KAAL,GAAa;AACXL,MAAAA,IAAI,EAAE,EADK;AAEXpB,MAAAA,QAAQ,EAAE,KAFC;AAGX4B,MAAAA,QAAQ,EAAE;AAAEZ,QAAAA,OAAO,EAAE,EAAX;AAAeI,QAAAA,IAAI,EAAE,EAArB;AAAyBC,QAAAA,KAAK,EAAE;AAAhC;AAHC,KAAb;AAKD;;AACDQ,EAAAA,iBAAiB,GAAG;AAClB,SAAK9B,QAAL,CAAc;AACZqB,MAAAA,IAAI,EAAE,CACJ;AACEL,QAAAA,EAAE,EAAE,OADN;AAEEC,QAAAA,OAAO,EAAE,UAFX;AAGEC,QAAAA,IAAI,EAAE,cAHR;AAIEC,QAAAA,IAAI,EAAE,mCAJR;AAKEE,QAAAA,IAAI,EACF,4EANJ;AAOEC,QAAAA,KAAK,EAAE,CAAC7B,EAAD,CAPT;AAQE8B,QAAAA,QAAQ,EAAE,CACR;AACEL,UAAAA,IAAI,EAAE,QADR;AAEEC,UAAAA,IAAI,EAAE,mCAFR;AAGEK,UAAAA,IAAI,EAAE;AAHR,SADQ;AARZ,OADI;AADM,KAAd;AAoBD;;AAmDDO,EAAAA,MAAM,GAAG;AACP,wBACE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA,iBACG,KAAKL,KAAL,CAAWL,IAAX,CAAgBR,GAAhB,CAAoB,CAACC,CAAD,EAAIkB,CAAJ,KAAU;AAC7B,4BACE;AAAK,UAAA,SAAS,EAAC,UAAf;AAAA,kCACE;AAAK,YAAA,SAAS,EAAC,QAAf;AAAA,oCACE;AAAA,sCACE;AAAK,gBAAA,SAAS,EAAC,YAAf;AAAA,0BAA6BlB,CAAC,CAACI,IAAF,CAAO,CAAP,EAAUe,WAAV;AAA7B;AAAA;AAAA;AAAA;AAAA,sBADF,eAEE;AAAK,gBAAA,SAAS,EAAC,aAAf;AAAA,wCACE;AAAK,kBAAA,SAAS,EAAC,UAAf;AAAA,4BAA2BnB,CAAC,CAACI;AAA7B;AAAA;AAAA;AAAA;AAAA,wBADF,eAEE;AAAK,kBAAA,SAAS,EAAC,UAAf;AAAA,4BAA2BJ,CAAC,CAACK,IAAF,CAAOV,KAAP,CAAa,KAAb,EAAoB,CAApB;AAA3B;AAAA;AAAA;AAAA;AAAA,wBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,sBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,EAQG,KAAKZ,KAAL,CAAWqC,UAAX,IAAyB,OAAzB,gBACC;AACE,cAAA,SAAS,EAAC,UADZ;AAEE,cAAA,OAAO,EAAE,MAAM,KAAKN,eAAL,CAAqBd,CAAC,CAACE,EAAvB,CAFjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADD,gBAQC;AAAK,cAAA,SAAS,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA,oBAhBJ;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAoBE;AAAK,YAAA,SAAS,EAAC,MAAf;AAAA,oCACE;AAAK,cAAA,SAAS,EAAC,UAAf;AAAA,sCACE;AAAK,gBAAA,SAAS,EAAC,UAAf;AAAA,0BAA2BF,CAAC,CAACG;AAA7B;AAAA;AAAA;AAAA;AAAA,sBADF,eAEE;AACE,gBAAA,SAAS,EAAC,UADZ;AAEE,gBAAA,uBAAuB,EAAE;AAAEkB,kBAAAA,MAAM,EAAErB,CAAC,CAACO;AAAZ;AAF3B;AAAA;AAAA;AAAA;AAAA,sBAFF,eAME;AAAK,gBAAA,SAAS,EAAC,eAAf;AAAA,0BACGP,CAAC,CAACQ,KAAF,IACCR,CAAC,CAACQ,KAAF,CAAQT,GAAR,CAAY,CAACP,CAAD,EAAI8B,GAAJ,KAAY;AACtB,sCACE;AACE,oBAAA,SAAS,EAAC,UADZ;AAEE,oBAAA,GAAG,EAAE9B,CAFP;AAGE,oBAAA,GAAG,EAAEA,CAAC,CAAC+B;AAHT,qBAIOD,GAJP;AAAA;AAAA;AAAA;AAAA,0BADF;AAQD,iBATD;AAFJ;AAAA;AAAA;AAAA;AAAA,sBANF;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,eAqBE;AAAK,cAAA,SAAS,EAAC,UAAf;AAAA,sCACE;AAAK,gBAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF,eAEE;AAAK,gBAAA,SAAS,EAAC,cAAf;AAAA,0BACGtB,CAAC,CAACS,QAAF,IACCT,CAAC,CAACS,QAAF,CAAWV,GAAX,CAAe,CAACyB,CAAD,EAAIF,GAAJ,KAAY;AACzB,sCACE;AAAK,oBAAA,SAAS,EAAC,aAAf;AAAA,4CACE;AAAK,sBAAA,SAAS,EAAC,aAAf;AAAA,gCAA8BE,CAAC,CAACpB;AAAhC;AAAA;AAAA;AAAA;AAAA,4BADF,eAEE;AAAK,sBAAA,SAAS,EAAC,aAAf;AAAA,gCACGoB,CAAC,CAACnB,IAAF,CAAOV,KAAP,CAAa,KAAb,EAAoB,CAApB;AADH;AAAA;AAAA;AAAA;AAAA,4BAFF,eAKE;AAAK,sBAAA,SAAS,EAAC,aAAf;AAAA,gCAA8B6B,CAAC,CAACd;AAAhC;AAAA;AAAA;AAAA;AAAA,4BALF;AAAA,qBAAkCY,GAAlC;AAAA;AAAA;AAAA;AAAA,0BADF;AASD,iBAVD;AAFJ;AAAA;AAAA;AAAA;AAAA,sBAFF,eAgBE;AACE,gBAAA,IAAI,EAAC,MADP;AAEE,gBAAA,SAAS,EAAC,eAFZ;AAGE,gBAAA,WAAW,EAAC;AAHd;AAAA;AAAA;AAAA;AAAA,sBAhBF;AAAA;AAAA;AAAA;AAAA;AAAA,oBArBF;AAAA;AAAA;AAAA;AAAA;AAAA,kBApBF;AAAA,WAA+BJ,CAA/B;AAAA;AAAA;AAAA;AAAA,gBADF;AAmED,OApEA,CADH,EAuEG,KAAKnC,KAAL,CAAWqC,UAAX,IAAyB,OAAzB,gBACC;AAAM,QAAA,KAAK,EAAC,aAAZ;AAAA,+BACE;AACE,UAAA,GAAG,EAAE1C,MAAM,CAAC,WAAD,CADb;AAEE,UAAA,GAAG,EAAC,UAFN;AAGE,UAAA,OAAO,EAAE,MAAM,KAAKM,cAAL,CAAoB,IAApB;AAHjB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADD,GAQG,IA/EN,EAgFG,KAAK4B,KAAL,CAAWzB,QAAX,gBACC,QAAC,OAAD;AACE,QAAA,OAAO,EAAE,KAAKC,OAAL,CAAaqC,IAAb,CAAkB,IAAlB,CADX;AAEE,QAAA,QAAQ,EAAE,KAAKb,KAAL,CAAWG,QAFvB;AAGE,QAAA,cAAc,EAAE,KAAK/B,cAAL,CAAoByC,IAApB,CAAyB,IAAzB;AAHlB;AAAA;AAAA;AAAA;AAAA,cADD,GAMG,IAtFN;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AA0FD;;AA5K0B;;AA+K7B,eAAe5C,IAAf","sourcesContent":["import React, { Component } from \"react\";\nimport getImg from \"../../Utils/getImg\";\nimport \"./Home.scss\";\nimport f1 from \"./../../assets/images/guitarBack.jpg\";\nimport AddPost from \"./AddPost\";\n\nclass Home extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      data: [],\n      addModal: false,\n      template: { heading: \"\", data: \"\", files: [] },\n    };\n  }\n  componentDidMount() {\n    this.setState({\n      data: [\n        {\n          id: \"p0001\",\n          heading: \"Lesson 1\",\n          user: \"Jithin Kumar\",\n          date: \"Sun May 02 2021 10:09:06 GMT+0530\",\n          data:\n            \"<p>Introduction to music</p><p>All music is made up of 12+1 notes.....</p>\",\n          files: [f1],\n          comments: [\n            {\n              user: \"sumukh\",\n              date: \"Sun May 02 2021 10:09:06 GMT+0530\",\n              line: \"Nice\",\n            },\n          ],\n        },\n      ],\n    });\n  }\n\n  toggleAddModal = (val) => {\n    this.setState({\n      addModal: val,\n    });\n  };\n\n  addPost = (head, body, attach) => {\n    let f = JSON.stringify(body).split(\"\\\\n\");\n    let h;\n    console.log(f);\n    h = f.map((e) => {\n      h + \"<p>\" + e + \"</p>\";\n    });\n    let x = {\n      id: \"p0002\",\n      heading: head,\n      user: \"Jithin Kumar\",\n      date: JSON.stringify(new Date()),\n      data: h,\n      files: [f1],\n      comments: [\n        {\n          user: \"sumukh\",\n          date: \"Sun May 02 2021 10:09:06 GMT+0530\",\n          line: \"Nice\",\n        },\n      ],\n    };\n    let y = this.state.data;\n    y.push(x);\n    this.setState({\n      data: y,\n    });\n  };\n\n  toggleEditModal = (id) => {\n    let x = this.state.template;\n    let f = this.state.data.map((e) => {\n      if (e.id == id) return e;\n    });\n    x.heading = f[0].heading;\n    x.data = f[0].data;\n    x.files.push(f[0].files);\n    this.setState({\n      template: x,\n    });\n    this.toggleAddModal(true);\n  };\n\n  render() {\n    return (\n      <div className=\"sa-home-w\">\n        {this.state.data.map((e, i) => {\n          return (\n            <div className=\"eachPost\" key={i}>\n              <div className=\"header\">\n                <div>\n                  <div className=\"headerIcon\">{e.user[0].toUpperCase()}</div>\n                  <div className=\"nameAndDate\">\n                    <div className=\"namePost\">{e.user}</div>\n                    <div className=\"datePost\">{e.date.split(\"GMT\")[0]}</div>\n                  </div>\n                </div>\n                {this.props.isLoggedIn == \"admin\" ? (\n                  <div\n                    className=\"editPost\"\n                    onClick={() => this.toggleEditModal(e.id)}\n                  >\n                    Edit\n                  </div>\n                ) : (\n                  <div className=\"editPost\"></div>\n                )}\n              </div>\n              <div className=\"body\">\n                <div className=\"mainBody\">\n                  <div className=\"postHead\">{e.heading}</div>\n                  <div\n                    className=\"postBody\"\n                    dangerouslySetInnerHTML={{ __html: e.data }}\n                  />\n                  <div className=\"attachedFiles\">\n                    {e.files &&\n                      e.files.map((f, ind) => {\n                        return (\n                          <img\n                            className=\"eachFile\"\n                            src={f}\n                            alt={f.name}\n                            key={ind}\n                          />\n                        );\n                      })}\n                  </div>\n                </div>\n                <div className=\"comments\">\n                  <div className=\"commentsHeader\">Comments</div>\n                  <div className=\"commentsBody\">\n                    {e.comments &&\n                      e.comments.map((c, ind) => {\n                        return (\n                          <div className=\"eachComment\" key={ind}>\n                            <div className=\"commentUser\">{c.user}</div>\n                            <div className=\"commentDate\">\n                              {c.date.split(\"GMT\")[0]}\n                            </div>\n                            <div className=\"commentLine\">{c.line}</div>\n                          </div>\n                        );\n                      })}\n                  </div>\n                  <input\n                    type=\"text\"\n                    className=\"commentsInput\"\n                    placeholder=\"Write a comment\"\n                  />\n                </div>\n              </div>\n            </div>\n          );\n        })}\n\n        {this.props.isLoggedIn == \"admin\" ? (\n          <span class=\"sa-add-post\">\n            <img\n              src={getImg(\"cross.svg\")}\n              alt=\"Add Post\"\n              onClick={() => this.toggleAddModal(true)}\n            />\n          </span>\n        ) : null}\n        {this.state.addModal ? (\n          <AddPost\n            addPost={this.addPost.bind(this)}\n            template={this.state.template}\n            toggleAddModal={this.toggleAddModal.bind(this)}\n          />\n        ) : null}\n      </div>\n    );\n  }\n}\n\nexport default Home;\n"]},"metadata":{},"sourceType":"module"}