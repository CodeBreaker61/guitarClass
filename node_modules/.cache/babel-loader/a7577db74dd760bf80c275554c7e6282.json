{"ast":null,"code":"var _jsxFileName = \"/home/jithin/GuitarClass/guitarclass/src/Pages/Content/index.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport TopicSection from \"../../components/TopicSection\";\nimport CourseSection from \"../../components/CourseSection\";\nimport Toaster from \"../../ReusableComponents/Toaster\";\nimport DefaultLayout from \"../../components/DefaultLayout\";\nimport \"./Content.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Content = props => {\n  _s();\n\n  const [toaster, setToaster] = React.useState({\n    showToaster: false,\n    toasterMessage: \"\"\n  });\n  const [isLoaderVisible, setIsLoaderVisible] = React.useState(false);\n  React.useEffect(() => {\n    if (!props.isLoggedIn) {\n      props.goto(\"/\");\n    }\n  }, [props]);\n\n  const renderToaster = toasterMessage => {\n    setToaster({\n      showToaster: true,\n      toasterMessage: toasterMessage\n    });\n    setTimeout(() => {\n      setToaster({\n        showToaster: false,\n        toasterMessage: \"\"\n      });\n    }, 3000);\n  };\n\n  return props.isLoggedIn ? /*#__PURE__*/_jsxDEV(DefaultLayout, {\n    goto: props.goto,\n    route: props.route,\n    selectedHeaderTab: props.selectedHeaderTab,\n    updateSelectedHeaderTab: props.updateSelectedHeaderTab,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sf-content-w\",\n      children: props.selectedHeaderTab === 0 ? /*#__PURE__*/_jsxDEV(CourseSection, {\n        goto: props.goto,\n        route: props.route,\n        isLoaderVisible: isLoaderVisible,\n        setIsLoaderVisible: setIsLoaderVisible\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 11\n      }, this) : // <TopicSection\n      //   goto={props.goto}\n      //   route={props.route}\n      //   // quizData={quizTableData}\n      //   // fetchQuizData={fetchQuizData}\n      //   isLoaderVisible={isLoaderVisible}\n      //   // handleFilterChange={filterQuizData}\n      //   setIsLoaderVisible={setIsLoaderVisible}\n      // />\n      null\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), toaster.showToaster ? /*#__PURE__*/_jsxDEV(Toaster, {\n      toastList: {\n        description: toaster.toasterMessage,\n        backgroundColor: \"#000\"\n      },\n      position: \"top-center\",\n      deleteTime: 3000\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }, this) : null]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this) : null;\n};\n\n_s(Content, \"KcakNGX0JZeGZXeDLruvQ5bzKhE=\");\n\n_c = Content;\nexport default Content;\n\nvar _c;\n\n$RefreshReg$(_c, \"Content\");","map":{"version":3,"sources":["/home/jithin/GuitarClass/guitarclass/src/Pages/Content/index.js"],"names":["React","TopicSection","CourseSection","Toaster","DefaultLayout","Content","props","toaster","setToaster","useState","showToaster","toasterMessage","isLoaderVisible","setIsLoaderVisible","useEffect","isLoggedIn","goto","renderToaster","setTimeout","route","selectedHeaderTab","updateSelectedHeaderTab","description","backgroundColor"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAOC,YAAP,MAAyB,+BAAzB;AACA,OAAOC,aAAP,MAA0B,gCAA1B;AACA,OAAOC,OAAP,MAAoB,kCAApB;AACA,OAAOC,aAAP,MAA0B,gCAA1B;AAEA,OAAO,eAAP;;;AAEA,MAAMC,OAAO,GAAIC,KAAD,IAAW;AAAA;;AACzB,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBR,KAAK,CAACS,QAAN,CAAe;AAC3CC,IAAAA,WAAW,EAAE,KAD8B;AAE3CC,IAAAA,cAAc,EAAE;AAF2B,GAAf,CAA9B;AAIA,QAAM,CAACC,eAAD,EAAkBC,kBAAlB,IAAwCb,KAAK,CAACS,QAAN,CAAe,KAAf,CAA9C;AAEAT,EAAAA,KAAK,CAACc,SAAN,CAAgB,MAAM;AACpB,QAAI,CAACR,KAAK,CAACS,UAAX,EAAuB;AACrBT,MAAAA,KAAK,CAACU,IAAN,CAAW,GAAX;AACD;AACF,GAJD,EAIG,CAACV,KAAD,CAJH;;AAMA,QAAMW,aAAa,GAAIN,cAAD,IAAoB;AACxCH,IAAAA,UAAU,CAAC;AAAEE,MAAAA,WAAW,EAAE,IAAf;AAAqBC,MAAAA,cAAc,EAAEA;AAArC,KAAD,CAAV;AACAO,IAAAA,UAAU,CAAC,MAAM;AACfV,MAAAA,UAAU,CAAC;AACTE,QAAAA,WAAW,EAAE,KADJ;AAETC,QAAAA,cAAc,EAAE;AAFP,OAAD,CAAV;AAID,KALS,EAKP,IALO,CAAV;AAMD,GARD;;AAUA,SAAOL,KAAK,CAACS,UAAN,gBACL,QAAC,aAAD;AACE,IAAA,IAAI,EAAET,KAAK,CAACU,IADd;AAEE,IAAA,KAAK,EAAEV,KAAK,CAACa,KAFf;AAGE,IAAA,iBAAiB,EAAEb,KAAK,CAACc,iBAH3B;AAIE,IAAA,uBAAuB,EAAEd,KAAK,CAACe,uBAJjC;AAAA,4BAME;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA,gBACGf,KAAK,CAACc,iBAAN,KAA4B,CAA5B,gBACC,QAAC,aAAD;AACE,QAAA,IAAI,EAAEd,KAAK,CAACU,IADd;AAEE,QAAA,KAAK,EAAEV,KAAK,CAACa,KAFf;AAGE,QAAA,eAAe,EAAEP,eAHnB;AAIE,QAAA,kBAAkB,EAAEC;AAJtB;AAAA;AAAA;AAAA;AAAA,cADD,GAOG;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAjBF;AAAA;AAAA;AAAA;AAAA,YANF,EAyBGN,OAAO,CAACG,WAAR,gBACC,QAAC,OAAD;AACE,MAAA,SAAS,EAAE;AACTY,QAAAA,WAAW,EAAEf,OAAO,CAACI,cADZ;AAETY,QAAAA,eAAe,EAAE;AAFR,OADb;AAKE,MAAA,QAAQ,EAAC,YALX;AAME,MAAA,UAAU,EAAE;AANd;AAAA;AAAA;AAAA;AAAA,YADD,GASG,IAlCN;AAAA;AAAA;AAAA;AAAA;AAAA,UADK,GAqCH,IArCJ;AAsCD,CA7DD;;GAAMlB,O;;KAAAA,O;AA+DN,eAAeA,OAAf","sourcesContent":["import React from \"react\";\n\nimport TopicSection from \"../../components/TopicSection\";\nimport CourseSection from \"../../components/CourseSection\";\nimport Toaster from \"../../ReusableComponents/Toaster\";\nimport DefaultLayout from \"../../components/DefaultLayout\";\n\nimport \"./Content.css\";\n\nconst Content = (props) => {\n  const [toaster, setToaster] = React.useState({\n    showToaster: false,\n    toasterMessage: \"\",\n  });\n  const [isLoaderVisible, setIsLoaderVisible] = React.useState(false);\n\n  React.useEffect(() => {\n    if (!props.isLoggedIn) {\n      props.goto(\"/\");\n    }\n  }, [props]);\n\n  const renderToaster = (toasterMessage) => {\n    setToaster({ showToaster: true, toasterMessage: toasterMessage });\n    setTimeout(() => {\n      setToaster({\n        showToaster: false,\n        toasterMessage: \"\",\n      });\n    }, 3000);\n  };\n\n  return props.isLoggedIn ? (\n    <DefaultLayout\n      goto={props.goto}\n      route={props.route}\n      selectedHeaderTab={props.selectedHeaderTab}\n      updateSelectedHeaderTab={props.updateSelectedHeaderTab}\n    >\n      <div className=\"sf-content-w\">\n        {props.selectedHeaderTab === 0 ? (\n          <CourseSection\n            goto={props.goto}\n            route={props.route}\n            isLoaderVisible={isLoaderVisible}\n            setIsLoaderVisible={setIsLoaderVisible}\n          />\n        ) : // <TopicSection\n        //   goto={props.goto}\n        //   route={props.route}\n        //   // quizData={quizTableData}\n        //   // fetchQuizData={fetchQuizData}\n        //   isLoaderVisible={isLoaderVisible}\n        //   // handleFilterChange={filterQuizData}\n        //   setIsLoaderVisible={setIsLoaderVisible}\n        // />\n        null}\n      </div>\n      {toaster.showToaster ? (\n        <Toaster\n          toastList={{\n            description: toaster.toasterMessage,\n            backgroundColor: \"#000\",\n          }}\n          position=\"top-center\"\n          deleteTime={3000}\n        />\n      ) : null}\n    </DefaultLayout>\n  ) : null;\n};\n\nexport default Content;\n"]},"metadata":{},"sourceType":"module"}