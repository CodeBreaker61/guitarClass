{"ast":null,"code":"var _jsxFileName = \"/home/jithin/GuitarClass/guitarclass/src/Components/Home/AddPost.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport getImg from \"../../Utils/getImg\";\nimport \"./Home.scss\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AddPost = props => {\n  _s();\n\n  const [file, setfile] = React.useState([]);\n  const [check, setCheck] = React.useState([false]);\n  React.useEffect(() => {\n    if (file.length > 0) setCheck(true);\n  }, [file]);\n\n  function handleUpload(item) {\n    let x = file;\n    x.push(item[0]); // console.log(item);\n\n    setfile(x);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"sa-modal-w\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sa-modal-box\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: getImg(\"cross.svg\"),\n        style: {\n          position: \"relative\",\n          right: \"-50%\",\n          cursor: \"pointer\"\n        },\n        className: \"close-btn\",\n        onClick: () => props.toggleAddModal(false)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"headingEntry\",\n        children: [\"Heading\", /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"postHead\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        id: \"postData\",\n        placeholder: check ? \"Add Data\" : false\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Attach Files\", \" \", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          onChange: ev => handleUpload(ev.target.files)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(React.Fragment, {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"postFiles\",\n          children: check && file && file.map((f, ind) => {\n            return /*#__PURE__*/_jsxDEV(\"img\", {\n              className: \"eachFile\",\n              src: URL.createObjectURL(f),\n              alt: f.name\n            }, ind, false, {\n              fileName: _jsxFileName,\n              lineNumber: 45,\n              columnNumber: 19\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        style: {\n          width: \"50%\"\n        },\n        name: \"Add Post\",\n        className: \"sa-login-btn\",\n        children: \"Add Post\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AddPost, \"zzuMzSn0d9fOjua+YNHt5HQ8udw=\");\n\n_c = AddPost;\nexport default AddPost;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddPost\");","map":{"version":3,"sources":["/home/jithin/GuitarClass/guitarclass/src/Components/Home/AddPost.js"],"names":["React","getImg","AddPost","props","file","setfile","useState","check","setCheck","useEffect","length","handleUpload","item","x","push","position","right","cursor","toggleAddModal","ev","target","files","map","f","ind","URL","createObjectURL","name","width"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,oBAAnB;AACA,OAAO,aAAP;;;AAEA,MAAMC,OAAO,GAAIC,KAAD,IAAW;AAAA;;AACzB,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBL,KAAK,CAACM,QAAN,CAAe,EAAf,CAAxB;AACA,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBR,KAAK,CAACM,QAAN,CAAe,CAAC,KAAD,CAAf,CAA1B;AAEAN,EAAAA,KAAK,CAACS,SAAN,CAAgB,MAAM;AACpB,QAAIL,IAAI,CAACM,MAAL,GAAc,CAAlB,EAAqBF,QAAQ,CAAC,IAAD,CAAR;AACtB,GAFD,EAEG,CAACJ,IAAD,CAFH;;AAIA,WAASO,YAAT,CAAsBC,IAAtB,EAA4B;AAC1B,QAAIC,CAAC,GAAGT,IAAR;AACAS,IAAAA,CAAC,CAACC,IAAF,CAAOF,IAAI,CAAC,CAAD,CAAX,EAF0B,CAG1B;;AACAP,IAAAA,OAAO,CAACQ,CAAD,CAAP;AACD;;AAED,sBACE;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA,2BACE;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA,8BACE;AACE,QAAA,GAAG,EAAEZ,MAAM,CAAC,WAAD,CADb;AAEE,QAAA,KAAK,EAAE;AAAEc,UAAAA,QAAQ,EAAE,UAAZ;AAAwBC,UAAAA,KAAK,EAAE,MAA/B;AAAuCC,UAAAA,MAAM,EAAE;AAA/C,SAFT;AAGE,QAAA,SAAS,EAAC,WAHZ;AAIE,QAAA,OAAO,EAAE,MAAMd,KAAK,CAACe,cAAN,CAAqB,KAArB;AAJjB;AAAA;AAAA;AAAA;AAAA,cADF,eAQE;AAAK,QAAA,SAAS,EAAC,cAAf;AAAA,2CAEE;AAAO,UAAA,EAAE,EAAC;AAAV;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cARF,eAYE;AAAU,QAAA,EAAE,EAAC,UAAb;AAAwB,QAAA,WAAW,EAAEX,KAAK,GAAG,UAAH,GAAgB;AAA1D;AAAA;AAAA;AAAA;AAAA,cAZF,eAaE;AAAA,mCACe,GADf,eAEE;AAAO,UAAA,IAAI,EAAC,MAAZ;AAAmB,UAAA,QAAQ,EAAGY,EAAD,IAAQR,YAAY,CAACQ,EAAE,CAACC,MAAH,CAAUC,KAAX;AAAjD;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cAbF,eAiBE,QAAC,KAAD,CAAO,QAAP;AAAA,+BACE;AAAK,UAAA,SAAS,EAAC,WAAf;AAAA,oBACGd,KAAK,IACJH,IADD,IAECA,IAAI,CAACkB,GAAL,CAAS,CAACC,CAAD,EAAIC,GAAJ,KAAY;AACnB,gCACE;AACE,cAAA,SAAS,EAAC,UADZ;AAEE,cAAA,GAAG,EAAEC,GAAG,CAACC,eAAJ,CAAoBH,CAApB,CAFP;AAGE,cAAA,GAAG,EAAEA,CAAC,CAACI;AAHT,eAIOH,GAJP;AAAA;AAAA;AAAA;AAAA,oBADF;AAQD,WATD;AAHJ;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAjBF,eAqCE;AACE,QAAA,KAAK,EAAE;AAAEI,UAAAA,KAAK,EAAE;AAAT,SADT;AAEE,QAAA,IAAI,EAAC,UAFP;AAGE,QAAA,SAAS,EAAC,cAHZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cArCF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAiDD,CAhED;;GAAM1B,O;;KAAAA,O;AAkEN,eAAeA,OAAf","sourcesContent":["import React from \"react\";\nimport getImg from \"../../Utils/getImg\";\nimport \"./Home.scss\";\n\nconst AddPost = (props) => {\n  const [file, setfile] = React.useState([]);\n  const [check, setCheck] = React.useState([false]);\n\n  React.useEffect(() => {\n    if (file.length > 0) setCheck(true);\n  }, [file]);\n\n  function handleUpload(item) {\n    let x = file;\n    x.push(item[0]);\n    // console.log(item);\n    setfile(x);\n  }\n\n  return (\n    <div className=\"sa-modal-w\">\n      <div className=\"sa-modal-box\">\n        <img\n          src={getImg(\"cross.svg\")}\n          style={{ position: \"relative\", right: \"-50%\", cursor: \"pointer\" }}\n          className=\"close-btn\"\n          onClick={() => props.toggleAddModal(false)}\n        />\n\n        <div className=\"headingEntry\">\n          Heading\n          <input id=\"postHead\" />\n        </div>\n        <textarea id=\"postData\" placeholder={check ? \"Add Data\" : false} />\n        <p>\n          Attach Files{\" \"}\n          <input type=\"file\" onChange={(ev) => handleUpload(ev.target.files)} />\n        </p>\n        <React.Fragment>\n          <div className=\"postFiles\">\n            {check &&\n              file &&\n              file.map((f, ind) => {\n                return (\n                  <img\n                    className=\"eachFile\"\n                    src={URL.createObjectURL(f)}\n                    alt={f.name}\n                    key={ind}\n                  />\n                );\n              })}\n            {/* <div className=\"eachFile\">\n            <img id=\"eachFileAdd\" src={getImg(\"cross.svg\")} alt={\"addFile\"} />\n          \n          </div> */}\n          </div>\n        </React.Fragment>\n        <button\n          style={{ width: \"50%\" }}\n          name=\"Add Post\"\n          className=\"sa-login-btn\"\n        >\n          Add Post\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default AddPost;\n"]},"metadata":{},"sourceType":"module"}