{"ast":null,"code":"var _jsxFileName = \"/home/jithin/GuitarClass/guitarclass/src/Pages/Content/index.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport Toaster from \"../../ReusableComponents/Toaster\";\nimport DefaultLayout from \"./../../Components/DefaultLayout\";\nimport { Router, useHistory } from \"react-router-dom\";\nimport { BrowserRouter as Route, Switch } from \"react-router-dom\";\nimport \"./Content.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Content = props => {\n  _s();\n\n  const history = useHistory();\n  const [toaster, setToaster] = React.useState({\n    showToaster: false,\n    toasterMessage: \"\"\n  });\n  const [isLoaderVisible, setIsLoaderVisible] = React.useState(false);\n  React.useEffect(() => {\n    if (!props.isLoggedIn) {\n      history.push(\"/\");\n    }\n  }, [props]);\n\n  const renderToaster = toasterMessage => {\n    setToaster({\n      showToaster: true,\n      toasterMessage: toasterMessage\n    });\n    setTimeout(() => {\n      setToaster({\n        showToaster: false,\n        toasterMessage: \"\"\n      });\n    }, 3000);\n  };\n\n  return props.isLoggedIn ? /*#__PURE__*/_jsxDEV(DefaultLayout, {\n    isLoggedIn: props.userType,\n    userName: props.userName,\n    setUserType: props.setUserType.bind(this),\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sa-content-w\",\n      children: /*#__PURE__*/_jsxDEV(Switch, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          path: \"/user\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/user/profile\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), toaster.showToaster ? /*#__PURE__*/_jsxDEV(Toaster, {\n      toastList: {\n        description: toaster.toasterMessage,\n        backgroundColor: \"#000\"\n      },\n      position: \"top-center\",\n      deleteTime: 3000\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }, this) : null]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this) : null;\n};\n\n_s(Content, \"mNd5LFwY5PuIy82IsEKOn+UQ7uE=\", false, function () {\n  return [useHistory];\n});\n\n_c = Content;\nexport default Content;\n\nvar _c;\n\n$RefreshReg$(_c, \"Content\");","map":{"version":3,"sources":["/home/jithin/GuitarClass/guitarclass/src/Pages/Content/index.js"],"names":["React","Toaster","DefaultLayout","Router","useHistory","BrowserRouter","Route","Switch","Content","props","history","toaster","setToaster","useState","showToaster","toasterMessage","isLoaderVisible","setIsLoaderVisible","useEffect","isLoggedIn","push","renderToaster","setTimeout","userType","userName","setUserType","bind","description","backgroundColor"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,OAAP,MAAoB,kCAApB;AACA,OAAOC,aAAP,MAA0B,kCAA1B;AACA,SAASC,MAAT,EAAiBC,UAAjB,QAAmC,kBAAnC;AACA,SAASC,aAAa,IAAIC,KAA1B,EAAiCC,MAAjC,QAA+C,kBAA/C;AAEA,OAAO,eAAP;;;AAEA,MAAMC,OAAO,GAAIC,KAAD,IAAW;AAAA;;AACzB,QAAMC,OAAO,GAAGN,UAAU,EAA1B;AACA,QAAM,CAACO,OAAD,EAAUC,UAAV,IAAwBZ,KAAK,CAACa,QAAN,CAAe;AAC3CC,IAAAA,WAAW,EAAE,KAD8B;AAE3CC,IAAAA,cAAc,EAAE;AAF2B,GAAf,CAA9B;AAIA,QAAM,CAACC,eAAD,EAAkBC,kBAAlB,IAAwCjB,KAAK,CAACa,QAAN,CAAe,KAAf,CAA9C;AAEAb,EAAAA,KAAK,CAACkB,SAAN,CAAgB,MAAM;AACpB,QAAI,CAACT,KAAK,CAACU,UAAX,EAAuB;AACrBT,MAAAA,OAAO,CAACU,IAAR,CAAa,GAAb;AACD;AACF,GAJD,EAIG,CAACX,KAAD,CAJH;;AAMA,QAAMY,aAAa,GAAIN,cAAD,IAAoB;AACxCH,IAAAA,UAAU,CAAC;AAAEE,MAAAA,WAAW,EAAE,IAAf;AAAqBC,MAAAA,cAAc,EAAEA;AAArC,KAAD,CAAV;AACAO,IAAAA,UAAU,CAAC,MAAM;AACfV,MAAAA,UAAU,CAAC;AACTE,QAAAA,WAAW,EAAE,KADJ;AAETC,QAAAA,cAAc,EAAE;AAFP,OAAD,CAAV;AAID,KALS,EAKP,IALO,CAAV;AAMD,GARD;;AAUA,SAAON,KAAK,CAACU,UAAN,gBACL,QAAC,aAAD;AACE,IAAA,UAAU,EAAEV,KAAK,CAACc,QADpB;AAEE,IAAA,QAAQ,EAAEd,KAAK,CAACe,QAFlB;AAGE,IAAA,WAAW,EAAEf,KAAK,CAACgB,WAAN,CAAkBC,IAAlB,CAAuB,IAAvB,CAHf;AAAA,4BAKE;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA,6BACE,QAAC,MAAD;AAAA,gCACE,QAAC,KAAD;AAAO,UAAA,IAAI,EAAC;AAAZ;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE,QAAC,KAAD;AAAO,UAAA,IAAI,EAAC;AAAZ;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YALF,EAWGf,OAAO,CAACG,WAAR,gBACC,QAAC,OAAD;AACE,MAAA,SAAS,EAAE;AACTa,QAAAA,WAAW,EAAEhB,OAAO,CAACI,cADZ;AAETa,QAAAA,eAAe,EAAE;AAFR,OADb;AAKE,MAAA,QAAQ,EAAC,YALX;AAME,MAAA,UAAU,EAAE;AANd;AAAA;AAAA;AAAA;AAAA,YADD,GASG,IApBN;AAAA;AAAA;AAAA;AAAA;AAAA,UADK,GAuBH,IAvBJ;AAwBD,CAhDD;;GAAMpB,O;UACYJ,U;;;KADZI,O;AAkDN,eAAeA,OAAf","sourcesContent":["import React from \"react\";\nimport Toaster from \"../../ReusableComponents/Toaster\";\nimport DefaultLayout from \"./../../Components/DefaultLayout\";\nimport { Router, useHistory } from \"react-router-dom\";\nimport { BrowserRouter as Route, Switch } from \"react-router-dom\";\n\nimport \"./Content.css\";\n\nconst Content = (props) => {\n  const history = useHistory();\n  const [toaster, setToaster] = React.useState({\n    showToaster: false,\n    toasterMessage: \"\",\n  });\n  const [isLoaderVisible, setIsLoaderVisible] = React.useState(false);\n\n  React.useEffect(() => {\n    if (!props.isLoggedIn) {\n      history.push(\"/\");\n    }\n  }, [props]);\n\n  const renderToaster = (toasterMessage) => {\n    setToaster({ showToaster: true, toasterMessage: toasterMessage });\n    setTimeout(() => {\n      setToaster({\n        showToaster: false,\n        toasterMessage: \"\",\n      });\n    }, 3000);\n  };\n\n  return props.isLoggedIn ? (\n    <DefaultLayout\n      isLoggedIn={props.userType}\n      userName={props.userName}\n      setUserType={props.setUserType.bind(this)}\n    >\n      <div className=\"sa-content-w\">\n        <Switch>\n          <Route path=\"/user\"></Route>\n          <Route path=\"/user/profile\"></Route>\n        </Switch>\n      </div>\n      {toaster.showToaster ? (\n        <Toaster\n          toastList={{\n            description: toaster.toasterMessage,\n            backgroundColor: \"#000\",\n          }}\n          position=\"top-center\"\n          deleteTime={3000}\n        />\n      ) : null}\n    </DefaultLayout>\n  ) : null;\n};\n\nexport default Content;\n"]},"metadata":{},"sourceType":"module"}